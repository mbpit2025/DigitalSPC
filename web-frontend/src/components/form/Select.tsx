// src/components/form/Select.tsx (The corrected file)

import React from "react";

interface Option {
Â  value: string;
Â  label: string;
}

// ðŸ“Œ CORRECTED INTERFACE: Added the 'value' prop
export interface SelectProps {
Â  options: Option[];
Â  placeholder?: string;
Â  onChange: (value: string) => void;
Â  className?: string;
Â  
Â  // ðŸ’¡ This prop is required to make the component "controlled" 
Â  // and eliminates the TypeScript error in the parent component.
Â  value: string; 
}

// ðŸ“Œ CORRECTED COMPONENT: Removed internal state
const Select: React.FC<SelectProps> = ({
Â  options,
Â  placeholder = "Select an option",
Â  onChange,
Â  className = "",
Â  // ðŸ’¡ The 'value' prop is now passed directly from the parent state
Â  value, 
}) => {

Â  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
Â  Â  const newValue = e.target.value;
Â  Â  // We only notify the parent; the parent will update the 'value' prop.
Â  Â  onChange(newValue); 
Â  };

Â  return (
Â  Â  <select
Â  Â  Â  className={`h-11 w-full appearance-none rounded-lg border border-gray-300 px-4 py-2.5 pr-11 text-sm shadow-theme-xs placeholder:text-gray-400 focus:border-brand-300 focus:outline-hidden focus:ring-3 focus:ring-brand-500/10 dark:border-gray-700 dark:bg-gray-900 dark:text-white/90 dark:placeholder:text-white/30 dark:focus:border-brand-800 ${
Â  Â  Â  Â  // Use the external 'value' prop to determine the color state
Â  Â  Â  Â  value
Â  Â  Â  Â  Â  ? "text-gray-800 dark:text-white/90"
Â  Â  Â  Â  Â  : "text-gray-400 dark:text-gray-400"
Â  Â  Â  } ${className}`}
Â  Â  Â  // ðŸ’¡ Controlled: Value is taken from props
Â  Â  Â  value={value} 
Â  Â  Â  onChange={handleChange}
Â  Â  >
Â  Â  Â  {/* Placeholder option */}
Â  Â  Â  <option
Â  Â  Â  Â  value=""
Â  Â  Â  Â  disabled
Â  Â  Â  Â  className="text-gray-700 dark:bg-gray-900 dark:text-gray-400"
Â  Â  Â  >
Â  Â  Â  Â  {placeholder}
Â  Â  Â  </option>
Â  Â  Â  {/* Map over options */}
Â  Â  Â  {options.map((option) => (
Â  Â  Â  Â  <option
Â  Â  Â  Â  Â  key={option.value}
Â  Â  Â  Â  Â  value={option.value}
Â  Â  Â  Â  Â  className="text-gray-700 dark:bg-gray-900 dark:text-gray-400"
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  {option.label}
Â  Â  Â  Â  </option>
Â  Â  Â  ))}
Â  Â  </select>
Â  );
};

export default Select;